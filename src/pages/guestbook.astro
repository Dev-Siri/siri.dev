---
import { getSession } from "auth-astro/server";

import BaseLayout from "../layouts/BaseLayout.astro";

import AddComment from "../islands/AddComment.astro";
import GuestbookComments from "../islands/GuestbookComments.astro";
import Login from "../islands/Login.astro";

import { getGuestbookEntries } from "../utils/guestbook";
import { getFormattedTime, getRelativeTime } from "../utils/time";

const [session, guestbookEntries] = await Promise.all([getSession(Astro.request), getGuestbookEntries()]);
---

<BaseLayout
  title="Guestbook"
  description="Communicate with people browsing the same site as you are right now around the internet with simple text."
  path="/guestbook"
  class="text-center"
>
  <h2 transition:name="header-text" class="text-left leading-[1!important]">Guestbook</h2>
  <p class="text-xl text-left my-5">Communicate with people browsing the same site as you are right now around the world with simple text.</p>
  {session ? <AddComment /> : <Login />}
  <GuestbookComments>
    {
      guestbookEntries
        .sort((prevEntry, nextEntry) => {
          if (new Date(prevEntry.createdAt) < new Date(nextEntry.createdAt)) return 1;

          return -1;
        })
        .map(({ username, createdAt, comment }) => (
          <article class="flex flex-col items-start">
            <div class="flex gap-2">
              <p class="text-gray-300">{username}:</p>
              <p>{comment}</p>
            </div>
            <time class="text-xs text-gray-400 font-bold" datetime={getFormattedTime(createdAt)}>
              {getRelativeTime(createdAt)}
            </time>
          </article>
        ))
    }
  </GuestbookComments>
</BaseLayout>

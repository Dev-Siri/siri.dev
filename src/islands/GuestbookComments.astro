<guestbook-comments class="mt-10 gap-4 flex flex-col">
  <template id="guestbook-comment-template">
    <article class="flex flex-col items-start">
      <div class="flex gap-2">
        <p class="text-gray-300" id="author"></p>
        <p id="message"></p>
      </div>
      <time class="text-xs text-gray-400 font-bold"></time>
    </article>
  </template>
  <slot />
</guestbook-comments>

<script>
  import type { GuestBookEntry } from "../utils/guestbook";

  class GuestbookComments extends HTMLElement {
    private newEntryTemplate: HTMLTemplateElement;

    constructor() {
      super();

      this.newEntryTemplate = document.querySelector<HTMLTemplateElement>("#guestbook-comment-template")!;
    }

    public async addData(newEntry: GuestBookEntry) {
      const { getFormattedTime, getRelativeTime } = await import("../utils/time");

      const instance = this.newEntryTemplate.content.cloneNode(true) as DocumentFragment;
      const username = instance.querySelector("p:first-of-type")!;
      const comment = instance.querySelector("p:last-of-type")!;
      const createdAt = instance.querySelector("time")!;

      username.textContent = `${newEntry.username}:`;
      comment.textContent = newEntry.comment;
      createdAt.dateTime = getFormattedTime(newEntry.createdAt);
      createdAt.textContent = getRelativeTime(newEntry.createdAt);

      this.prepend(instance);
    }
  }

  customElements.define("guestbook-comments", GuestbookComments);
</script>
